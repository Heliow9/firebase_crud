import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'
import { database } from '../service/firebase';




export default function Home() {



  const [userName, setUserName] = useState();
  const [userEmail, setUserEmail] = useState();
  const [userTel, setUserTel] = useState();
  const [userObservation, setObservation] = useState();
  const [contactData, SetData] = useState([]);
  const [EditKey, SetEditKey] = useState();
  function HandlerCadastrar(e) {
    e.preventDefault()

    if (EditKey) {
     
      
      const dados = {
        userName,
        userEmail,
        userTel,
        userObservation
      }
      const ref = database.ref('Contatos').child(EditKey).update(dados);
    } else {
      const ref = database.ref('Contatos')

      const dados = {
        userName,
        userEmail,
        userTel,
        userObservation
      }

      ref.push(dados)
    }
  }

  function handlerDelete(chave) {
    let ref = database.ref('Contatos')
    ref.child(chave).remove();

  }

  function handlerEditar(item) {
    SetEditKey(item.key)
    setUserName(item.Name);
    setUserEmail(item.Email);
    setUserTel(item.Tel)
    setObservation(item.Obs)
    console.log(EditKey)

  }




  useEffect(() => {
    function HandlerGetContact() {

      database.ref('Contatos').on('value', (snapshot) => {
        SetData([])
        snapshot.forEach((childItem) => {
          let list = {
            key: childItem.key,
            Email: childItem.val().userEmail,
            Name: childItem.val().userName,
            Tel: childItem.val().userTel,
            Obs: childItem.val().userObservation
          };

          SetData(oldArray => [...oldArray, list])

        })

      })

    }

    HandlerGetContact();

  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.crud}><h3>Crud com Firebase</h3></div>
      <main className={styles.main}>

        <div className={styles.formContainer}>
          <form>
            Cadastre um contato
            <div className={styles.formGroup}>
              <label htmlFor="name">Nome:</label>
              <input type="text" id="name" value={userName} onChange={event => setUserName(event.target.value)} />
            </div>

            <div className={styles.formGroup}>

              <label htmlFor="email">Email:</label>
              <input type="email" id="email" value={userEmail} onChange={event => setUserEmail(event.target.value)} />
            </div>
            <div className={styles.formGroup}>
              <label htmlFor="tel">Telefone:</label>
              <input type="tel" id="tel" value={userTel} onChange={event => setUserTel(event.target.value)} />
            </div>
            <div className={styles.formGroup}>
              <label htmlFor="obs">Observações:</label>
              <textarea type="text" id="obs" value={userObservation} maxLength="200" onChange={event => setObservation(event.target.value)} />
            </div>

            <div className="buttons">
              <button onClick={HandlerCadastrar}>Cadastrar</button>
            </div>

          </form>
        </div>
        <div className={styles.cardContact}>
          <input type="search" placeholder="Buscar" />

          <div className={styles.contactGroup}>
            {

              contactData.map((item, key) => (
                <div className={styles.cardUser} key={item.key}>
                  <div className={styles.CardInfo}>
                    <h4>{item.Name}</h4>
                    <span>{item.Email}</span>
                    <span>{item.Tel}</span>
                    <span>{item.Obs}</span>
                  </div>
                  <div className={styles.CardButton}>
                    <span onClick={() => handlerEditar(item)} >Editar</span>
                    <span onClick={() => handlerDelete(item.key)} >Excluir</span>
                  </div>
                </div>
              ))

            }




          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
